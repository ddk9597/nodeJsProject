inversion of Control
제어역전

의존성 주입
Dependency Injection


클래스별 의존성 주입 및 제어역전을 컨테이너가 알아서 해줌

nestJs
IOC 컨테이너


도커란 무엇인가?

실무는 다른 사람들과 함께 작업을 하는 것
혼자 코딩을 하더라도 소스 코드를 다른 곳에 클라우드에 올려야됨(배포)
이렇게 배포된 프로그램은 여러 컴퓨터에서 구동되게 된다.

도커를 사용하면 이렇게 배포된 프로그램을 os 상관없이
실행 할 수 있게 해줌

게다가! 각종 환경변수들을 도커파일, 이미지화 해서 
프로그램이 실행되는데 방해되는 요소들을 제거할 수 있다.

개발 환경에서 작동되는 프로그램 -> 배포해도 작동되는 프로그램

도커파일을 작성하고 도커에 먹이기만 하면 됨

도커 파일, 컨테이너를 생성하는 방법만 알게 되면 자유롭게 배포 가능함


도커랑 가상화의 차이점

도커 : 도커엔진을 통해 컨테이너로

가상화 : 하이퍼바이저를 통해 게스트OS와 연결하기에 무거움

도커는 환경, 패키지, 소스코드, 명령어들을 도커파일이라는 하나의 컨테이너로 묶어서
어떤 상황에서든 사용할 수 있게 해주는 기술이다.

Docker Compose
컨테이너 갯수가 너무 많아져서 관리하기 어려울 때 사용하는 기술

쿠버네티스(1등), 도커컴포스(약간 용도가 다름), 도커스웜

도커컴포즈
  여러개의 하드웨어에서 작동 생각 x
  하나의 기기에서 여러 컨테이너를 돌리는것에 최적화
  로컬환경에서 많이 사용됨

yml 도커 파일 기반으로 작성, 도커파일 없이 작성할 수도 있음




